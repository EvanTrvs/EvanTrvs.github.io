{
	"viewMore": "View More",
    "close": "Close",
    "3D_Split&Merge": {
        "title": "3D Split&Merge",
        "subtitle": "Image Segmentation Algorithm",
        "date": "September 2023 - January 2024",
        "description": "C++ implementation and optimization of a multidimensional image segmentation algorithm. This programming project developed an image segmentation solution that partitions images into homogeneous regions - a crucial process for complex image analysis (medical imaging MRI, shape detection, 3D reconstruction).\n\nWe particularly focused on improving key criteria:\n- Determinism (for reproducible results)\n- Quality (for precise segmentation)\n- Speed (for efficient processing)\n\nThe project incorporates several technologies: the Boost library for multidimensional array manipulation, multithreading for accelerated computations, optimized memory management, and I/O routines for various image formats (NIfTI, PNG, JPEG, GIF).\n\nThis challenging project allowed me to deepen my skills in low-level C++ programming, object-oriented data structure design, and advanced algorithmics.\n\nProject completed as part of the engineering program at Polytech Tours.",
        "link": "https://github.com/EvanTrvs/3Dpics_SplitMerge",
        "thumbnail": "/assets/thumbnails/3D_Split&Merge.png",
        "badges": ["C++", "Optimization", "Imaging", "Multithreading", "2ðŸ‘¤"]
    },
    "Portfolio": {
		"title": "Personal Portfolio Website",
		"subtitle": "Responsive Web Application",
		"date": "April 2025",
		"description": "Development of a modern, interactive portfolio showcasing my professional journey and projects. This website was designed to provide clear and intuitive navigation while allowing me to practice and learn current web development tools.\n\nProject aspects:\n- Intuitive and responsive user interface\n- Multilingual support (FR/EN)\n- Structured project presentation\n- Media integration and external links\n- Modern and professional design\n\nKey technologies:\nâ€¢ React with TypeScript for a robust, type-safe foundation\nâ€¢ Bootstrap for responsive design\nâ€¢ Vite for optimal performance",
		"link": "https://github.com/EvanTrvs/EvanTrvs.github.io",
		"thumbnail": "",
		"badges": ["React", "TypeScript", "Bootstrap", "Frontend", "Web"]
    },
    "RL_Frogger": {
		"title": "Reinforcement Learning on Atari Frogger",
		"subtitle": "Training Autonomous AI Agents",
		"date": "January 2025 - April 2025",
		"description": "Concrete reinforcement learning project applied to Atari Frogger, leveraging modern artificial intelligence technologies. This technical challenge involved training autonomous agents to perform in a dynamic, non-deterministic environment using OpenAI Gymnasium for simulation and PyTorch for neural network implementation.\n\n- Implemented Deep Q-Network (DQN) and Trust Region Policy Optimization (TRPO) algorithms\n- Developed convolutional (CNN) and fully-connected (FCNN) neural networks using PyTorch\n- Accelerated GPU training (CUDA) executed on Google Cloud infrastructure\n- Modular image preprocessing pipeline (dimensionality reduction, frame stacking, feature extraction)\n- Comprehensive performance tracking and results analysis system\n- Comparative training with hyperparameter optimization\n\nThis academic project covered the complete AI development pipeline, demonstrating practical applications of reinforcement learning concepts adaptable to various complex problems.\n\nProject completed as part of the IFT702 - Artificial Intelligence Planning course at UniversitÃ© de Sherbrooke",
		"link": "https://github.com/EvanTrvs/Projet-RL-Frogger",
		"thumbnail": "/assets/thumbnails/rl_frogger.png",
		"badges": ["Python", "AI", "PyTorch", "Neural Networks", "5ðŸ‘¤"]
	},
	"GestionStock": {
		"title": "Stock Manager",
		"subtitle": "C# Software",
        "date": "October 2024 - December 2024",
		"description": "Design and development of a stock management application with a robust architecture based on SQLite for data persistence. This project implements a comprehensive catalog management solution with an embedded relational database, demonstrating best practices in C# development and SQL data manipulation.\n\nKey Features:\n- Modeling and management of a complex SQLite database\n- Advanced SQL querying for filtering and search operations\n- ACID transaction system for data integrity\n- Management of relationships between tables (items, brands, families)\n- Complete management interface with Windows Forms\n\nThis project allowed me to deepen my skills in developing database-connected applications, particularly in designing relational schemas and optimizing SQL queries in a C#/.NET context.\n\nProject completed as part of the engineering cycle at Polytech Tours.",
		"link": "https://github.com/EvanTrvs/Gestionnaire_Stock",
		"thumbnail": "/assets/thumbnails/gestion_stock.png",
		"badges": ["C#", ".NET", "SQLite", "CRUD", "WinForms", "2ðŸ‘¤"]
    },
"ML_comparison": {
        "title": "Comparative Study on Machine Learning",
        "subtitle": "Real-world Classification Problem",
        "date": "November 2024 - December 2024",
        "description": "This project aims to compare several classification models on a binary classification dataset. The study uses advanced techniques in data preparation, model training, hyperparameter optimization, and performance evaluation.\n\nKey aspects of the project:\n- Data preprocessing: cleaning, normalization, and encoding of categorical and numerical variables.\n- Classification algorithms: logistic regression, K-nearest neighbors, SVM, neural networks, decision trees.\n- Cross-validation: K-fold method to reliably evaluate models.\n- Hyperparameter optimization: systematic search to improve model performance.\n- Model evaluation: use of metrics such as accuracy, precision, recall, and F1 score to compare model performance.\n- Statistical tests: use of Student's tests to statistically compare model performances.\n\nThis project illustrates a comprehensive scientific approach to comparing classification models with real-world data, using best practices in machine learning and data science.\n\nProject completed as part of the IFT712 - Learning Techniques course, University of Sherbrooke.",
        "link": "https://github.com/EvanTrvs/ML_comparison",
        "thumbnail": "/assets/thumbnails/ML_comparison.jpg",
        "badges": ["Python", "Data Science", "Scikit-learn", "Machine Learning", "Scientific Method", "4ðŸ‘¤"]
    },"QT_UserManager": {
    "title": "User Access Manager",
    "subtitle": "Qt Software",
    "date": "October 2024 - December 2024",
    "description": "Development of an application for managing and visualizing SQLite databases using the Qt 6 framework in C++. This project implements a graphical user interface, data persistence in JSON, and follows software engineering best practices.\n\nKey Features:\n- Access rights management (4 levels)\n- CRUD operations on SQLite databases\n- Graphical interface with Qt Widgets\n- Data persistence in JSON\n- Implementation of best practices (naming, comments, Doxygen documentation).\n\nProject carried out as part of the engineering program at Polytech Tours.",
    "link": "https://github.com/EvanTrvs/QT_UserManager",
    "thumbnail": "",
    "badges": ["C++", "Qt", "SQLite", "Desktop App", "Software Engineering"]
},
"HexGame-Platform": {
    "title": "HexGame-Platform",
    "subtitle": "Management and Analysis of Game Sets",
    "date": "February 2025 - April 2025",
    "description": "HexGame-Platform is a comprehensive platform for playing, managing, and analyzing games of Hex. Developed with a modular and object-oriented architecture in Python, this platform uses a modern web interface based on Flask.\n\nMajor axes of the project:\n- Implementation of SOLID principles and design patterns (MVC, Factory, Strategy) for robust and scalable design\n- Advanced database management for game analysis and training AI models\n- Development of game bots with simple heuristics and a training environment for AI agents\n- Universal multi-format backup system, capable of reading and writing any type of game format handled\n- Management and labeling of game sets for efficient analysis and processing\n- Responsive and user-friendly web interface\n- Comprehensive test coverage with Pytest and detailed documentation\n\nThis project aims to be a universal tool for managing game data, integrating a rigorous approach to software engineering and object-oriented programming with design patterns to ensure optimal maintainability and extensibility.\n\nPersonal project open to major developments.",
    "link": "https://github.com/EvanTrvs/HexGame-Platform",
    "thumbnail": "HexGame-Platform.jpg",
    "badges": ["Python", "Flask", "MVC", "Design Pattern", "SOLID", "Pytest"]
}
}